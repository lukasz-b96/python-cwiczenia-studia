1. git add file -> wybieramy pojedynczy plik
2. git commit -m "message" -> git robi snapshot tego pliku (zachouje stary plik rowniez) i dodaje wiadomosc do tego
3. git status -> sprawdzenie co bedzie dodane, co zostało zmienione, co nie jest dodane (nie ma git add)
4. git push -> zmiany ida na github

(musimy zrobić add, potem jest commit do plikow dodanych przez add, na koncu jest push zeby dodac to na gita)
5. git commit -am "message" -> dodaje wszyskie zmienione pliki
6. git pull pobiera plik z githuba i zamienia z moim

(merge conflict - mamy plik po komendach: git add, git commit)
(zmiany z gita to te juz wprowadzone przez kogos)
a) gdy uzyje "git push" najpierw kaze zrobic pull
b) uzywam "git pull"
c) pojawiają sie strzałki
    I) Recznie ustawiam koncowa wersje danej linii
    II) "Accept current change" -> zostawia moja wersje
d) potem robie znowu git add, git commit -m
e) moge zrobic push

(powrot do poprzedniej wersji)
7. git log -> zmiany w historii
8a. git reset --hard <HASH>    -> powrot do konkretnego pliku
8b. git reset --hard origin/master     -> powrót do wersji z gita

(new branch- new feature)
(   
    master - default, stable
    feature - jakas nowa opcja
)
(head - final project)
(merging after all)
9. git branch -> mowi w jakim jestem branchu i jakie istnieja w repo
10. git checkout -b style -> stworzenie nowego branchu
11. git checokut master -> zmiana branchu na jakis ktory istnieje
12. git merge style -> bedac w masterze, dodaje to co jest w style 
(moze byc merge conflict w linii gdzie w master i style jest cos innego zmienine - dwie rozne rzeczy w tej samej linii)